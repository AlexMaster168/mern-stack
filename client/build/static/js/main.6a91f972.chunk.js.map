{"version":3,"sources":["hooks/http.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPages.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.js","hooks/auth.js","components/Navbar.js","App.js","routes.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","setLinks","useContext","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","setLink","window","M","updateTextFields","pressHandler","event","key","push","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","input","document","getElementById","toggle","setToggle","setAttribute","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","onClick","marginRight","disabled","storageName","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","isAutheticated","routes","path","exact","useRoutes","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.6a91f972.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return { loading, request, error, clearError }\r\n}","import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userId: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import React from 'react'\r\n\r\nexport const Loader = () => (\r\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n        <div className=\"preloader-wrapper active\">\r\n            <div className=\"spinner-layer spinner-red-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\" />\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                    <div className=\"circle\" />\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({ links }) => {\r\n    if (!links.length) {\r\n        return <p className=\"center\">Ссылок пока нет</p>\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>№</th>\r\n                <th>Оригинальная</th>\r\n                <th>Сокращенная</th>\r\n                <th>Открыть</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            { links.map((link, index) => {\r\n                return (\r\n                    <tr key={link._id}>\r\n                        <td>{index + 1}</td>\r\n                        <td>{link.from}</td>\r\n                        <td>{link.to}</td>\r\n                        <td>\r\n                            <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            }) }\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinksList} from '../components/LinksList'\r\n\r\nconst LinksPage = () => {\r\n    const [links, setLinks] = useState([])\r\n    const {loading, request} = useHttp()\r\n    const {token} = useContext(AuthContext)\r\n\r\n    const fetchLinks = useCallback(async () => {\r\n        try {\r\n            const fetched = await request('/api/link', 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLinks(fetched)\r\n        } catch (e) {\r\n        }\r\n    }, [token, request])\r\n\r\n    useEffect(() => {\r\n        fetchLinks()\r\n    }, [fetchLinks])\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!loading && <LinksList links={links}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LinksPage","import React,{useState, useContext, useEffect} from 'react';\r\nimport {useHttp} from '../hooks/http'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst CreatePage = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const {request} = useHttp()\r\n    const [link, setLink] = useState('')\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const pressHandler = async event => {\r\n        if (event.key === 'Enter') {\r\n            try {\r\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                })\r\n                history.push(`/detail/${data.link._id}`)\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\" style={{paddingTop: '2rem'}}>\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        placeholder=\"Вставьте ссылку\"\r\n                        id=\"link\"\r\n                        type=\"text\"\r\n                        value={link}\r\n                        onChange={e => setLink(e.target.value)}\r\n                        onKeyPress={pressHandler}\r\n                    />\r\n                    <label htmlFor=\"link\">Введите ссылку</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePage;","import React from 'react'\r\n\r\nexport const LinkCard = ({ link }) => {\r\n    return (\r\n        <>\r\n            <h2>Ссылка</h2>\r\n\r\n            <p>Ваша ссылка: <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n            <p>Откуда: <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n            <p>Количество кликов по ссылке: <strong>{link.clicks}</strong></p>\r\n            <p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n        </>\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from '../components/Loader'\r\nimport {LinkCard} from '../components/LinkCard'\r\n\r\nconst DetailPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const [link, setLink] = useState(null)\r\n    const {request, loading} = useHttp()\r\n    const linkId = useParams().id\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n                Authorization: `Bearer ${token}`\r\n            })\r\n            setLink(fetched)\r\n        } catch (e) {}\r\n    }, [token, linkId, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if (loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && link && <LinkCard link={link} /> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailPage;","import React, {useState, useEffect, useContext} from 'react';\r\nimport '../index.css'\r\nimport {useMessage} from \"../hooks/message\";\r\nimport {useHttp} from '../hooks/http'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AuthPage = () => {\r\n    let className = 'password-control';\r\n    let input = document.getElementById('password')\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    if (toggle) {\r\n        input.setAttribute(\"type\", \"text\")\r\n        className += ' view';\r\n    }\r\n    const setTogglePassword = () => {\r\n        input.setAttribute(\"type\", \"password\")\r\n        setToggle(!toggle)\r\n    }\r\n\r\n    const auth = useContext(AuthContext)\r\n    const message = useMessage()\r\n    const {loading, request, error, clearError} = useHttp()\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect(() => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            message(data.message)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    const cleanHandler = () => {\r\n        setForm({email: '', password: ''})\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Сократи Ссылку</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите пароль\"\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                />\r\n                                <label htmlFor=\"email\">Пароль</label>\r\n                                <Link to=\"/\" className={className} onClick={setTogglePassword}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{marginRight: 10}}\r\n                            onClick={loginHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            Войти\r\n                        </button>\r\n                        <button\r\n                            className=\"btn grey lighten-1 black-text\"\r\n                            style={{marginRight: 10}}\r\n                            onClick={registerHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            Регистрация\r\n                        </button>\r\n                        <button\r\n                            className=\"btn red accent-4 black-text\"\r\n                            onClick={cleanHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            Очистить\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthPage;","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({ html: text })\r\n        }\r\n    }, [])\r\n}","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userId, setUserId] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserId(id)\r\n\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: jwtToken\r\n        }))\r\n    }, [])\r\n\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserId(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n\r\n        if (data && data.token) {\r\n            login(data.token, data.userId)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n\r\n    return { login, logout, token, userId, ready }\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-1\" style={{ padding: '0 2rem' }}>\r\n                <span className=\"brand-logo\">Сокращение ссылок</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n                    <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n                    <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\nimport {BrowserRouter} from \"react-router-dom\"\nimport 'materialize-css'\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {Navbar} from \"./components/Navbar\";\nimport {Loader} from \"./components/Loader\";\n\nfunction App() {\n    const {token, login, logout, userId, ready} = useAuth()\n    const isAutheticated = !!token\n    const routes = useRoutes(isAutheticated)\n\n    if (!ready) {\n        return <Loader />\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            token, login, logout, userId, isAutheticated\n        }}>\n            <BrowserRouter>\n                { isAutheticated && <Navbar /> }\n                <div className=\"container\">\n                    {routes}\n                </div>\n            </BrowserRouter>\n        </AuthContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport LinksPage from \"./pages/LinksPages\";\r\nimport CreatePage from \"./pages/CreatePage\";\r\nimport DetailPage from \"./pages/DetailPage\";\r\nimport AuthPage from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAutheticated => {\r\n    if (isAutheticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/links\" exact>\r\n                    <LinksPage/>\r\n                </Route>\r\n                <Route path=\"/create\" exact>\r\n                    <CreatePage/>\r\n                </Route>\r\n                <Route path=\"/detail/:id\">\r\n                    <DetailPage/>\r\n                </Route>\r\n                <Redirect to=\"/create\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <AuthPage/>\r\n            </Route>\r\n            <Redirect to=\"/\"/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}